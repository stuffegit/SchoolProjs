Implement and test a multiple instance buffer module to pack
and unpack dataof different types with different sizes(in bits)
in a buffer according to therequirements below.

For example; 42 (0b0101010) as a 7-bit integer inserted into
the buffer from 4 as thestart position. 
If we extract 7 data bits from position 4 we shall get 42.

	array[0] 			        array[1] 					        array[2]
0 1 2 3 4 5 6 7 - 8 9 10 11 12 13 14 15 -  16 17 18 19 20 21 22 23
 		    0 1 0 1   0 1 0

1. A buffer is an array of type uint8_t and its size is specified
at runtimewhen the buffer is created.

2. Types of data which can be inserted into and extracted from a
buffer are float and int. Precision of float values shall be 0.01f. 
To insert a float value into a buffer, divide the float value by
the precision and convert the result to int and then insert the
int value into the buffer. 
To extract a float value from a buffer, extract the int value
and then multiply the int value by the precision.

3. There shall be functions to insert data values with a given
length(in bits)into a buffer started from a start position.

4. There shall be functions to extract data values with a given
length(inbits) from a buffer started from a start position.

5. There shall be a function to clear a buffer to reset all bytes
of a buffer.

6. The module shall be a well-designed and a well-described module.

7. The module shall be tested using assertions.

8. Use the bitwise operators. 
No magic numbers!
